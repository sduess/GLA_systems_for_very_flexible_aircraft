clear all
%% Define directories and parameters
route_directory = '/home/sduess/Documents/SHARPY_simulations/GLA_systems_for_very_flexible_aircraft/04_Control_Design_Synthesis/';
case_name = 'superflexop_cruise_linear_ROM_free_flight'; %'superflexop_cruise_linear_ROM_clamped'; %

%% Create systems and control gains for LQG controller
use_elevators=true;
setup_LQG_controller(route_directory, case_name,use_elevators);

%% Test LQR controller on a discrete gust with H=10m and I=10%
if use_elevators
    case_name = strcat(case_name, '_elev_on');
end
load(strcat('./controller_files_matlab/', case_name, '.mat'));
% Define directory where to find simulink files
addpath(strcat(route_directory,'/../05_Utils/matlab_functions/'));
simulink_file_directory = '/home/sduess/Documents/SHARPY_simulations/GLA_systems_for_very_flexible_aircraft/05_Utils/simulink_files/'%strcat(route_directory, '/../05_Utils/simulink_files/');

%

% Get gust input
gust_time_series = get_1minuscosine_gust_input(10, ...
                                                0.1, ...
                                                input_settings.dt, ...
                                                input_settings.u_inf, ...
                                                input_settings.flight_time);
simulation_output = run_linear_closed_loop_LQR_response(sys_final, ...
                    input_settings,...
                    gust_time_series, ...
                    controller_final.K, ...
                    simulink_file_directory);
% % Run LQR Simulink Simulation
% simulation_output = run_closed_loop_LQR_response_linear_system(...
%     sys_final, ...
%     input_settings, ...
%     gust_time_series, ...
%     controller_final, ...
%     simulink_file_directory);

% Save Results
save(strcat(route_directory,'/results_linear_closed_loop_simulations/LQR_test_output_discrete_gust_H10_I1_',case_name), ...
        'simulation_output', ...
        'case_name', ...
        '-v7.3');
%% Plot
figure(1); hold on;plot(simulation_output.actual_output.Time, simulation_output.actual_output.Data(:,[3 3+6]),'k'); hold off;
 figure(2); hold on;plot(simulation_output.control_input.Time, rad2deg(simulation_output.control_input.Data(:,1:2)),'k');hold off;
 figure(3); hold on;plot(simulation_output.control_input.Time, rad2deg(simulation_output.control_input.Data(:,3:4)),'k');hold off;
figure(5);hold on; plot(simulation_output.actual_output.Time, rad2deg(simulation_output.actual_output.Data(:,32)),'k');hold off;